@model EntityLayer.Models.Expertise
@{
    ViewData["Title"] = "Ekspertiz Ekle";
    var pieceStatuses = ViewBag.PieceStatuses as List<EntityLayer.Models.PieceStatus>;
    int carId = ViewBag.CarId;
    // Expertise modelindeki property adları ve Türkçe karşılıkları
    var pieceFields = new[] {
        new { Name = "KaputStatusId", Label = "Kaput" },
        new { Name = "TavanStatusId", Label = "Tavan" },
        new { Name = "BagajStatusId", Label = "Bagaj" },
        new { Name = "SolOnKapıStatusId", Label = "Sol Ön Kapı" },
        new { Name = "SagOnKapıStatusId", Label = "Sağ Ön Kapı" },
        new { Name = "SolArkaKapıStatusId", Label = "Sol Arka Kapı" },
        new { Name = "SagArkaKapıStatusId", Label = "Sağ Arka Kapı" },
        new { Name = "SolOnCamurlukStatusId", Label = "Sol Ön Çamurluk" },
        new { Name = "SagOnCamurlukStatusId", Label = "Sağ Ön Çamurluk" },
        new { Name = "SolArkaCamurlukStatusId", Label = "Sol Arka Çamurluk" },
        new { Name = "SagArkaCamurlukStatusId", Label = "Sağ Arka Çamurluk" }
    };
}

<style>
    .car-map-container {
        position: relative;
        width: 500px;
        margin: 0 auto 30px auto;
    }
    .car-map-img {
        width: 100%;
        display: block;
    }
    .car-map-label {
        position: absolute;
        width: 32px;
        height: 32px;
        color: #c00;
        font-size: 2rem;
        font-weight: bold;
        text-align: center;
        line-height: 32px;
        pointer-events: none;
        z-index: 3;
        text-shadow: 1px 1px 4px #fff, 0 0 2px #fff;
    }
    .car-map-btn {
        position: absolute;
        width: 38px;
        height: 38px;
        background: transparent;
        border: 2px solid rgba(255, 193, 7, 0.5);
        border-radius: 50%;
        color: transparent;
        cursor: pointer;
        z-index: 2;
        transition: border 0.2s;
        padding: 0;
    }
    .car-map-btn.selected {
        border: 2px solid #28a745;
        box-shadow: 0 0 8px #28a745;
    }
    .piece-dropdown {
        position: absolute;
        z-index: 10;
        background: #fff;
        border: 1px solid #ccc;
        padding: 8px;
        border-radius: 6px;
        min-width: 120px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.15);
        display: none;
    }
</style>

<h2 class="text-center mb-4">Ekspertiz Parça Seçimi</h2>

<div class="car-map-container">
    <img src="/images/araba_sablon.png" class="car-map-img" alt="Araba Şeması" />
    <!-- Rakamların üstüne HTML ile aynı numarayı yerleştiriyoruz -->
    <span class="car-map-label" style="top:50px; left:360px;">1</span>
    <span class="car-map-label" style="top:50px; left:250px;">2</span>
    <span class="car-map-label" style="top:50px; left:180px;">3</span>
    <span class="car-map-label" style="top:35px; left:60px;">4</span>
    <span class="car-map-label" style="top:140px; left:10px;">5</span>
    <span class="car-map-label" style="top:140px; left:80px;">6</span>
    <span class="car-map-label" style="top:240px; left:60px;">7</span>
    <span class="car-map-label" style="top:240px; left:180px;">8</span>
    <span class="car-map-label" style="top:240px; left:240px;">9</span>
    <span class="car-map-label" style="top:240px; left:360px;">10</span>
    <span class="car-map-label" style="top:140px; left:440px;">11</span>
    <span class="car-map-label" style="top:140px; left:340px;">12</span>
    <span class="car-map-label" style="top:140px; left:210px;">13</span>
    <!-- Butonlar şeffaf, tıklanabilir alan olarak -->
    <button type="button" class="car-map-btn" style="top:50px; left:360px;" onclick="showDropdown(1, event)"></button>
    <button type="button" class="car-map-btn" style="top:50px; left:250px;" onclick="showDropdown(2, event)"></button>
    <button type="button" class="car-map-btn" style="top:50px; left:180px;" onclick="showDropdown(3, event)"></button>
    <button type="button" class="car-map-btn" style="top:35px; left:60px;" onclick="showDropdown(4, event)"></button>
    <button type="button" class="car-map-btn" style="top:140px; left:10px;" onclick="showDropdown(5, event)"></button>
    <button type="button" class="car-map-btn" style="top:140px; left:80px;" onclick="showDropdown(6, event)"></button>
    <button type="button" class="car-map-btn" style="top:240px; left:60px;" onclick="showDropdown(7, event)"></button>
    <button type="button" class="car-map-btn" style="top:240px; left:180px;" onclick="showDropdown(8, event)"></button>
    <button type="button" class="car-map-btn" style="top:240px; left:240px;" onclick="showDropdown(9, event)"></button>
    <button type="button" class="car-map-btn" style="top:240px; left:360px;" onclick="showDropdown(10, event)"></button>
    <button type="button" class="car-map-btn" style="top:140px; left:440px;" onclick="showDropdown(11, event)"></button>
    <button type="button" class="car-map-btn" style="top:140px; left:340px;" onclick="showDropdown(12, event)"></button>
    <button type="button" class="car-map-btn" style="top:140px; left:210px;" onclick="showDropdown(13, event)"></button>
    <div id="piece-dropdown" class="piece-dropdown"></div>
</div>

<form asp-action="Create" method="post" id="expertiseForm">
    <input type="hidden" name="CarId" value="@carId" />
    @for (int i = 0; i < pieceFields.Length; i++)
    {
        <input type="hidden" name="@pieceFields[i].Name" id="@pieceFields[i].Name" />
    }
    <button type="submit" class="btn btn-primary mt-3 w-100">Kaydet</button>
</form>
<script>
    const pieceStatuses = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(pieceStatuses));
    const pieceFields = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(pieceFields));
    let selectedPieces = {};

    function showDropdown(pieceNo, event) {
        const dropdown = document.getElementById('piece-dropdown');
        dropdown.innerHTML = '';
        let html = `<strong>${pieceFields[pieceNo-1].Label}</strong><br/><select id='dropdown-select' class='form-control mt-1'>`;
        html += `<option value=''>Durum Seçiniz</option>`;
        for (let status of pieceStatuses) {
            html += `<option value='${status.PieceId}'>${status.PieceStatusName}</option>`;
        }
        html += `</select><button class='btn btn-sm btn-success mt-2 w-100' onclick='setPieceStatus(${pieceNo})'>Kaydet</button>`;
        dropdown.innerHTML = html;
        dropdown.style.display = 'block';
        dropdown.style.top = (event.target.offsetTop + 45) + 'px';
        dropdown.style.left = (event.target.offsetLeft - 10) + 'px';
        dropdown.setAttribute('data-piece', pieceNo);
    }

    function setPieceStatus(pieceNo) {
        const dropdown = document.getElementById('piece-dropdown');
        const select = document.getElementById('dropdown-select');
        const value = select.value;
        if (value) {
            selectedPieces[pieceNo] = value;
            document.getElementById(pieceFields[pieceNo-1].Name).value = value;
            document.querySelectorAll('.car-map-btn')[pieceNo-1].classList.add('selected');
        }
        dropdown.style.display = 'none';
    }

    document.getElementById('expertiseForm').onsubmit = function() {
        for (let i = 0; i < pieceFields.length; i++) {
            if (!document.getElementById(pieceFields[i].Name).value) {
                alert('Lütfen tüm parçalar için durum seçiniz!');
                return false;
            }
        }
        return true;
    };

    document.addEventListener('click', function(e) {
        const dropdown = document.getElementById('piece-dropdown');
        if (dropdown.style.display === 'block' && !dropdown.contains(e.target) && !e.target.classList.contains('car-map-btn')) {
            dropdown.style.display = 'none';
        }
    });
</script>
<!-- Not: /images/araba_sablon.png dosyasını wwwroot/images/ klasörüne eklemelisin! --> 